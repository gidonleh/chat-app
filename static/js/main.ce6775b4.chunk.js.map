{"version":3,"sources":["firebase.js","SideBarChat.js","SideBar.js","Chat.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","useStyles","makeStyles","theme","root","textDecoration","color","SideBarChat","display","padding","cursor","borderBottom","addNewChat","name","id","classes","useState","seed","setSeed","messages","setMessages","useEffect","Math","floor","random","messagesCleanup","collection","doc","orderBy","onSnapshot","snapshoot","docs","map","data","onClick","prompt","add","className","to","Avatar","src","SideBarChatInfo","message","sideBar","flexDirection","flex","overflow","backgroundColor","search","alignItems","height","searchContainer","borderRadius","border","marginLeft","sidebarHeader","justifyContent","borderRight","sidebarHeaderRight","gap","background","SideBar","rooms","setRooms","unsubscribe","snapshot","avatar","IconButton","size","placeholder","type","room","key","chat","chatHeader","chatHeaderInfo","chatHeaderRight","chatBody","backgroundImage","backgroundRepeat","backgroundPosition","chatMessage","position","fontSize","width","marginBottom","breakpoints","down","reciver","chatName","top","chatTimeStamp","alignSelf","chatFooter","borderTop","chatFooterForm","chatFooterFormInput","minHeight","outline","paddingLeft","Chat","currentUserId","input","setInput","roomName","setRoomName","roomId","useParams","roomNameCleanup","Date","length","timestamp","toDate","toUTCString","i","onSubmit","e","preventDefault","FieldValue","serverTimestamp","value","onChange","target","app","placeItems","app_body","maxHeight","boxShadow","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ce6775b4.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCPHhaxdfKOqPHYlfnQtSv38n19ik1FwfA\",\r\n    authDomain: \"whatsappclone-8ae83.firebaseapp.com\",\r\n    databaseURL: \"https://whatsappclone-8ae83.firebaseio.com\",\r\n    projectId: \"whatsappclone-8ae83\",\r\n    storageBucket: \"whatsappclone-8ae83.appspot.com\",\r\n    messagingSenderId: \"810011438602\",\r\n    appId: \"1:810011438602:web:9fdef1f55343d0efc139f3\"\r\n  };\r\n\r\n  const firebaseapp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebase.firestore();\r\n\r\n  export default db;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n\r\n  SideBarChat: {\r\n    display: \"flex\",\r\n    padding: \"20px\",\r\n    cursor: \"pointer\",\r\n    borderBottom: \"1px solid #f6f6f6\",\r\n  },\r\n}));\r\nfunction SideBarChat({ addNewChat, name, id }) {\r\n  const classes = useStyles();\r\n  const [seed, setSeed] = useState(0);\r\n\r\n  const [messages, setMessages] = useState(0);\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let messagesCleanup = \"\";\r\n    if (id) {\r\n      messagesCleanup = db\r\n        .collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshoot) =>\r\n          setMessages(snapshoot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n\r\n    return () => {\r\n      messagesCleanup();\r\n    };\r\n  }, [id]);\r\nlet createNewChat=()=>{\r\n  const name=prompt(\"please enter new chat name\")\r\n  if(name)\r\n  db.collection(\"rooms\").add({name})\r\n}\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`} className={classes.root}>\r\n      <div className={classes.SideBarChat}>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className={classes.SideBarChatInfo}>\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createNewChat} className={classes.SideBarChat}>\r\n      <h2>Add new chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarChat;","import React, {useState, useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport SideBarChat from './SideBarChat';\r\nimport db from './firebase'\r\nimport { cleanup } from '@testing-library/react';\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        sideBar: {\r\n          flexDirection: \"column\",\r\n          flex: \"0.35\",\r\n          overflow: \"auto\",\r\n          backgroundColor: \"white\",\r\n        },\r\n        search: {\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#f6f6f6\",\r\n          height: \"39px\",\r\n          padding: \"10px\",\r\n        },\r\n        searchContainer: {\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"White\",\r\n          flex: \"1\",\r\n          height: \"95%\",\r\n          borderRadius: \"20px\",\r\n          \"& input\": {\r\n            border: \"none\",\r\n            marginLeft: \"10px\",\r\n          },\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"gray\",\r\n            padding: \"10px\",\r\n          },\r\n        },\r\n        sidebarHeader: {\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          padding: \"20px\",\r\n          borderRight: \"1px solid lightgray\",\r\n        },\r\n        sidebarHeaderRight: {\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          marginLeft: \"auto\",\r\n          gap: \"10px\",\r\n        },\r\n        SideBarChat: {\r\n          background: \"white\",\r\n          flex: \"1\",\r\n          \"& :hover\": {\r\n            backgroundColor: \"#ebebeb\",\r\n          },\r\n        },\r\n      }));   \r\n     \r\nexport default function SideBar() {\r\n\r\n  const classes=useStyles();\r\n    const [rooms, setRooms] = useState([]);\r\n    useEffect(() => {\r\n        const unsubscribe = db\r\n        .collection('rooms')\r\n        .onSnapshot( (snapshot) =>\r\n        setRooms( snapshot.docs.map((doc) => ({\r\n            id: doc.id, data :doc.data()\r\n        }))));\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);   \r\n\r\n    return (\r\n        \r\n            <div className={classes.sideBar}>\r\n      <div className={classes.sidebarHeader}>\r\n        <Avatar className={classes.avatar} />\r\n        <div className={classes.sidebarHeaderRight}>\r\n          <IconButton size=\"small\">\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton size=\"small\">\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton size=\"small\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={classes.search}>\r\n        <div className={classes.searchContainer}>\r\n          <SearchOutlinedIcon />\r\n          <input placeholder=\"search or start new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className={classes.SideBarChat}>\r\n        <SideBarChat addNewChat />\r\n        {rooms?.map((room) => (\r\n          <SideBarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>        \r\n    \r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chat: {\r\n    flex: \"0.65\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  chatHeader: {\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid lightgray\",\r\n  },\r\n  chatHeaderInfo: {\r\n    flex: \"1\",\r\n  },\r\n  chatHeaderRight: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  chatBody: {\r\n    flex: \"1\",\r\n    backgroundImage:\r\n      \"url('https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png')\",\r\n    backgroundRepeat: \"repeat\",\r\n    backgroundPosition: \"center\",\r\n    padding: \"30px\",\r\n    overflow: \"auto\",\r\n  },\r\n  chatMessage: {\r\n    position: \"relative\",\r\n    fontSize: \"16px\",\r\n    padding: \"10px\",\r\n    borderRadius: \"10px\",\r\n    width: \"fit-content\",\r\n    display: \"flex\",\r\n    backgroundColor: \"#ffffff\",\r\n    marginBottom: \"4%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: \"8%\",\r\n    },\r\n  },\r\n  reciver: {\r\n    marginLeft: \"auto\",\r\n    backgroundColor: \"#dcf8c6\",\r\n  },\r\n\r\n  chatName: {\r\n    position: \"absolute\",\r\n    top: \"-15px\",\r\n    fontSize: \"10px\",\r\n  },\r\n  chatTimeStamp: {\r\n    fontSize: \"xx-small\",\r\n    marginLeft: \"6px\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n\r\n  chatFooter: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"62px\",\r\n    borderTop: \"1px solid lightgray\",\r\n  },\r\n  chatFooterForm: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flex: \"1\",\r\n  },\r\n  chatFooterFormInput: {\r\n    flex: \"1\",\r\n    minHeight: \"40px\",\r\n    borderRadius: \"20px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    paddingLeft: \"2%\",\r\n    fontSize: \"18px\",\r\n  },\r\n}));\r\nfunction Chat() {\r\n  const currentUserId = \"asaf\";\r\n  const classes = useStyles(currentUserId === \"asaf\");\r\n  const [seed, setSeed] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const { roomId } = useParams();\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n    let roomNameCleanup = \"\";\r\n    let messagesCleanup = \"\";\r\n    if (roomId) {\r\n      roomNameCleanup = db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshoot) => setRoomName(snapshoot.data().name));\r\n      messagesCleanup = db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshoot) =>\r\n          setMessages(snapshoot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n\r\n    return () => {\r\n      roomNameCleanup();\r\n      messagesCleanup();\r\n    };\r\n  }, [roomId]);\r\n\r\n  let hundleSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: currentUserId,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div className={classes.chat}>\r\n      <div className={classes.chatHeader}>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className={classes.chatHeaderInfo}>\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n        <div className={classes.chatHeaderRight}>\r\n          <IconButton size=\"small\">\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton size=\"small\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={classes.chatBody}>\r\n        {messages.map((message,i) => (\r\n          <p\r\n            key={i}\r\n            className={`${classes.chatMessage} ${\r\n              message.name === currentUserId && classes.reciver\r\n            }`}\r\n          >\r\n            <span className={`${classes.chatName}  `}> {message.name}</span>\r\n            {message.message}\r\n            <span className={classes.chatTimeStamp}>\r\n              {new Date(message?.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={classes.chatFooter}>\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n\r\n        <form onSubmit={hundleSubmit} className={classes.chatFooterForm}>\r\n          <input\r\n            type=\"text\"\r\n            className={classes.chatFooterFormInput}\r\n            placeholder=\"Type a message\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <IconButton type=\"submit\">\r\n            <SendIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MicIcon />\r\n          </IconButton>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SideBar from \"./SideBar\";\nimport Chat from \"./Chat.js\";\nimport {HashRouter as Router ,Switch,Route} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    backgroundColor: \"#dadbd3\",\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"grid\",\n    placeItems: \"center\",\n  },\n  app_body: {\n    display: \"flex\",\n    backgroundColor: \"#ededed\",\n    height: \"95%\",\n    maxHeight: \"750px\",\n    width: \"70%\",\n    boxShadow: \"-1px 4px 20px -6px rgba(0,0,0,0.7)\",\n  },\n  SideBar: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.app}>\n      <div className={classes.app_body}>\n        <div className={classes.SideBar}>\n        <Router>\n          <SideBar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n              <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}